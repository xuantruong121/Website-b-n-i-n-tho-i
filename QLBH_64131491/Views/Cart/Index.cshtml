@model IEnumerable<QLBH_64131491.Models.Model_64131491.Cart_64131491>

@Html.AntiForgeryToken()

@{
    ViewData["Title"] = "Giỏ hàng";
}

<div class="container">
    <h1 class="mb-4">Giỏ hàng</h1>

    @if (Model.Any())
    {
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Sản phẩm</th>
                        <th>Giá</th>
                        <th>Số lượng</th>
                        <th>Thành tiền</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="@item.Smartphone.ImageUrl" class="cart-item-image me-3" alt="@item.Smartphone.Model">
                                    <div>
                                        <h6 class="mb-0">@item.Smartphone.Brand @item.Smartphone.Model</h6>
                                        <small class="text-muted">@item.Smartphone.Color</small>
                                    </div>
                                </div>
                            </td>
                            <td>
                                @if (item.Smartphone.DiscountPrice.HasValue)
                                {
                                    <span class="price">@item.Smartphone.DiscountPrice.Value.ToString("N0") đ</span>
                                    <span class="original-price">@item.Smartphone.Price.ToString("N0") đ</span>
                                }
                                else
                                {
                                    <span class="price">@item.Smartphone.Price.ToString("N0") đ</span>
                                }
                            </td>
                            <td>
                                <div class="input-group" style="width: 120px;">
                                    <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(@item.CartId, @(item.Quantity - 1))">-</button>
                                    <input type="number" class="form-control text-center" value="@item.Quantity" min="1" max="@item.Smartphone.Quantity" onchange="updateQuantity(@item.CartId, this.value)">
                                    <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(@item.CartId, @(item.Quantity + 1))">+</button>
                                </div>
                            </td>
                            <td>
                                @{
                                    var price = item.Smartphone.DiscountPrice ?? item.Smartphone.Price;
                                    var total = price * item.Quantity;
                                }
                                <span class="price">@total.ToString("N0") đ</span>
                            </td>
                            <td>
                                <button class="btn btn-danger" onclick="removeFromCart(@item.CartId)">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-end"><strong>Tổng cộng:</strong></td>
                        <td>
                            @{
                                var totalAmount = Model.Sum(item => (item.Smartphone.DiscountPrice ?? item.Smartphone.Price) * item.Quantity);
                            }
                            <span class="price">@totalAmount.ToString("N0") đ</span>
                        </td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="d-flex justify-content-between mt-4">
            <a asp-controller="Smartphone" asp-action="Index" class="btn btn-outline-primary">
                <i class="bi bi-arrow-left"></i> Tiếp tục mua sắm
            </a>
            <a asp-action="Checkout" class="btn btn-primary">
                Thanh toán <i class="bi bi-arrow-right"></i>
            </a>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="bi bi-cart-x display-1 text-muted"></i>
            <h3 class="mt-3">Giỏ hàng trống</h3>
            <p class="text-muted">Bạn chưa có sản phẩm nào trong giỏ hàng.</p>
            <a asp-controller="Smartphone" asp-action="Index" class="btn btn-primary mt-3">
                Tiếp tục mua sắm
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        function updateQuantity(cartId, quantity) {
            if (quantity < 1) return;
            
            $.ajax({
                url: '/Cart/UpdateQuantity',
                type: 'POST',
                data: {
                    cartId: cartId,
                    quantity: quantity,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {
                    location.reload();
                },
                error: function (error) {
                    showBootstrapToast('Có lỗi xảy ra khi cập nhật số lượng!', 'danger');
                }
            });
        }

        function removeFromCart(cartId) {
            if (confirm('Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                $.ajax({
                    url: '/Cart/Remove',
                    type: 'POST',
                    data: {
                        id: cartId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        location.reload();
                    },
                    error: function (error) {
                        showBootstrapToast('Có lỗi xảy ra khi xóa sản phẩm khỏi giỏ hàng!', 'danger');
                    }
                });
            }
        }
    </script>
} 